### 看子模块的 resource 能不能加载
GET {{baseUrl}}/version/random

### 创建数据库连接
POST {{baseUrl}}/connect/create/database
Content-Type: application/json

{
  "connectIdParam": {
    "module": "database",
    "connName": "lo"
  },
  "connectParam": {
    "host": "10.101.72.43",
    "port": 5432
  },
  "authParam": {
    "username": "postgres",
    "password": "postgres"
  },
  "dbType": "postgresql",
  "database": "hdsc_db"
}

### 获取所有数据库连接
GET {{baseUrl}}/db/metadata/connections


### 获取所有 catalogs
GET {{baseUrl}}/db/metadata/catalogs?connName=localhost

### 获取 catalog 的所有表
GET {{baseUrl}}/db/metadata/tables?connName=localhost&catalog=test

### 刷新表的列
GET {{baseUrl}}/db/metadata/refreshColumns?connName=localhost&catalog=test&tableName=batch

### 刷新表的主键
GET {{baseUrl}}/db/metadata/refreshPrimaryKeys?connName=localhost&catalog=test&tableName=batch

### 刷新表的索引
GET {{baseUrl}}/db/metadata/refreshIndexs?connName=localhost&catalog=test&tableName=batch

### 标记表-常用标记
GET {{baseUrl}}/db/metadata/extend/mark/tags

### 标记表-标记表
POST {{baseUrl}}/db/metadata/extend/mark/config/tableMark
Content-Type: application/json

[
  {
    "connName": "lo",
    "schemaName": "hdsc_db",
    "tableName": "mct_event_handler",
    "tags": ["biz"]
  }
]

### 标记表-获取表标记
GET {{baseUrl}}/db/metadata/extend/mark/tableTags?connName=lo&schemaName=hdsc_db&tableName=mct_event_handler

### 标记表-查找某个标记的表
GET {{baseUrl}}/db/metadata/extend/mark/tagTables?connName=lo&schemaName=hdsc_db

### 表关系 - 配置表关系
POST {{baseUrl}}/db/metadata/extend/relation/config
Content-Type: application/json

{
  "connName": "lo",
  "schemaName": "hdsc_db",
  "tableRelations": [
    {
      "sourceTableName": "mct.mct_event_handler",
      "targetTableName": "mct.mct_event_record_common",
      "sourceColumnName": "uuid",
      "targetColumnName": "uuid",
      "relation": "ONE_ONE"
    }
  ]
}

### 创建 zookeeper 连接
POST {{baseUrl}}/connect/create/zookeeper
Content-Type: application/json

{
  "connectIdParam": {
    "module": "zookeeper",
    "connName": "192.168.72.42_2181"
  },
  "connectParam": {
    "host": "10.101.72.42",
    "port": 2181
  }
}

### 列出子节点
GET {{baseUrl}}/zookeeper/childrens?connName=192.168.72.42_2181&path=/hd/kafka

### 元数据 meta
GET {{baseUrl}}/zookeeper/meta?connName=192.168.72.43&path=/brokers

### acls 权限
GET {{baseUrl}}/zookeeper/acls?connName=192.168.72.43&path=/brokers

### 读取数据
GET {{baseUrl}}/zookeeper/readData?connName=192.168.72.43&path=/brokers/ids/1&serializer=string

### 创建 redis 连接
POST {{baseUrl}}/connect/create/redis
Content-Type: application/json

{
  "connectIdParam": {
    "module": "redis",
    "connName": "10.101.72.43"
  },
  "connectParam": {
    "host": "10.101.72.43",
    "port": 7000
  }
}

### 查看 redis 的节点列表
GET {{baseUrl}}/redis/nodes?connName=10.101.72.43

### scan 某个 key ,可以模糊查询
GET {{baseUrl}}/redis/scan?connName=10.101.72.43&pattern=PLC:PARKINGLOT.CACHE&limit=10

### 读取某个具体的 key; 这个数据有点复杂,本来是用 GET 请求的,换 POST
POST {{baseUrl}}/redis/data
Content-Type: application/json

{
  "connName": "10.101.72.43",
  "key": "PLC:PARKINGLOT.CACHE",
  "serializerChose": {
    "value": "jdk",
    "hashKey": "jdk",
    "hashValue": "jdk"
  }

}

### 获取所有插件名称
GET {{baseUrl}}/plugin/names

### 获取插件详情
GET {{baseUrl}}/plugin/detail?key=kafka:main

### 访问插件
GET {{baseUrl}}/plugin/visited?key=kafka:main

### 插件-序列化数据到文件
GET {{baseUrl}}/plugin/serializer

### 连接管理-获取所有模块
GET {{baseUrl}}/connect/modules

### 连接管理-获取某个模块的连接列表
GET {{baseUrl}}/connect/redis/names

### 连接管理-获取某个连接详情
GET {{baseUrl}}/connect/redis/10.101.72.43

### 连接管理-获取所有连接
GET {{baseUrl}}/connect/all

### 单表随机数据生成
POST {{baseUrl}}/db/data/singleTableRandomData
Content-Type: application/json

{
  "connName": "localhost",
  "schemaName": "test",
  "tableName": "test",
  "columnMappers":[{"columnName": "name","random": "T(com.sanri.tools.modules.core.utils.RandomUtil).chinese(64,null)"},
    {"columnName": "idcard","random": "T(com.sanri.tools.modules.core.utils.RandomUtil).idcard()"}]
}

### google 翻译
GET http://translate.google.cn/translate_a/single?client=gtx&sl=zh-CN&tl=en&dt=t&q=算法

### 翻译替换工具
GET {{baseUrl}}/name/translate?orginChars=我是中国人&splitToolName=ik&tranlates=baidu

### 创建 kafka 连接
POST {{baseUrl}}/kafka/connect/create
Content-Type: application/yaml

connectIdParam:
  module: kafka
  connName: 192.168.72.42_2181
chroot: /hd/kafka
kafka:
  properties:
    sasl:
      jaas:
        config: org.apache.kafka.common.security.plain.PlainLoginModule required username=hd password=hd-kafka;
      mechanism: PLAIN
    security:
      protocol: SASL_PLAINTEXT

### 列出所有的主题信息
GET {{baseUrl}}/kafka/topics?clusterName=192.168.72.42_2181

### 列出主题日志数量
GET {{baseUrl}}/kafka/topic/logSize?clusterName=192.168.72.42_2181&topic=EGSC_SCP_DEVICEMGMT_STATUSTOBROADCAST_TOPIC

### 列出所有的消费组
GET {{baseUrl}}/kafka/groups?clusterName=192.168.72.42_2181

### 列出消费组消费的主题
GET {{baseUrl}}/kafka/group/topics?clusterName=192.168.72.42_2181&group=scp-st-broadcastApp_BC_APP6876

### 消费组情况查询
GET {{baseUrl}}/kafka/group/subscribes?clusterName=192.168.72.42_2181&group=scp-st-broadcastApp_BC_APP6876

### 消费组消费主题的偏移量 offset,logsize,lag
GET {{baseUrl}}/kafka/group/topic/offset?clusterName=192.168.72.42_2181&group=scp-st-broadcastApp_BC_APP6876&topic=EGSC_SCP_DEVICEMGMT_STATUSTOBROADCAST_TOPIC

### 消费组所有主题的偏移量
GET {{baseUrl}}/kafka/group/topics/offset?clusterName=192.168.72.42_2181&group=scp-st-broadcastApp_BC_APP6876

### brokers
GET {{baseUrl}}/kafka/brokers?clusterName=192.168.72.42_2181

###